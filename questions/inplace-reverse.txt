Name:
In-place reverse

Question:
Write a function to reverse a list in-place.  For example, it
should mutate ['a', 'b, 'c', 'd', 'e'] into ['e', 'd', 'c', 'b', 'a'].

Hint:
Think about swapping pairs of elements.

Solution:
Swap the first and last elements, then the second and second-to-last
elements, etc.

Skeleton:

def reverse(lst):
    # write your solution code here
    N = len(lst) - 1
    for i in range(N/2):
        tmp = lst[i]
        lst[i] = lst[N-i]
        lst[N-i] = tmp


Test:
input = ['a', 'b', 'c', 'd', 'e']
reverse(input)

Expect:
input = ['e', 'd', 'c', 'b', 'a']

Test:
input = ['a', 'b', 'c', 'd']
reverse(input)

Expect:
input = ['d', 'c', 'b', 'a']

Test:
input = ['a', 'b', 'c']
reverse(input)

Expect:
input = ['c', 'b', 'a']

Test:
input = ['a', 'b']
reverse(input)

Expect:
input = ['b', 'a']

Test:
input = ['a']
reverse(input)

Expect:
input = ['a']
