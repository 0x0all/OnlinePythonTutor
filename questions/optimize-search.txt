Name:
Optimize: Element search

Question:

The following search function finds the index of the first occurrence of
elt in a sorted list lst (or -1 if elt not found).  Optimize this
function so that it works on a 64-element sorted list by executing less
than 50 instructions.

Hint:
Linear search will never work.

Solution:
Implement binary search instead of linear search.

MaxInstructions: 50

Skeleton:

def search(lst, elt):
    ind = -1;
    for i in range(len(lst)):
        if lst[i] == elt:
            return i
    return -1


Test:
haystack = range(64)
needle = 63
result = search(haystack, needle)

Expect:
result = 63

Test:
haystack = range(64)
needle = 60
result = search(haystack, needle)

Expect:
result = 60

Test:
haystack = range(64)
needle = 32
result = search(haystack, needle)

Expect:
result = 32

Test:
haystack = range(64)
needle = 3
result = search(haystack, needle)

Expect:
result = 3

Test:
haystack = range(64)
needle = 1000
result = search(haystack, needle)

Expect:
result = -1

